//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project2ObjectWCF.DTO
{
    using System.Runtime.Serialization;


    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "FileDTO", Namespace = "http://schemas.datacontract.org/2004/07/Project2ObjectWCF.DTO", IsReference = true)]
    public partial class FileDTO : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private int IdField;

        private bool IsDeletedField;

        private Project2ObjectWCF.DTO.MetadataDTO MetadataField;

        private string PathField;

        private Project2ObjectWCF.DTO.TagDTO[] TagsField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted
        {
            get
            {
                return this.IsDeletedField;
            }
            set
            {
                this.IsDeletedField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project2ObjectWCF.DTO.MetadataDTO Metadata
        {
            get
            {
                return this.MetadataField;
            }
            set
            {
                this.MetadataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path
        {
            get
            {
                return this.PathField;
            }
            set
            {
                this.PathField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project2ObjectWCF.DTO.TagDTO[] Tags
        {
            get
            {
                return this.TagsField;
            }
            set
            {
                this.TagsField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "MetadataDTO", Namespace = "http://schemas.datacontract.org/2004/07/Project2ObjectWCF.DTO", IsReference = true)]
    public partial class MetadataDTO : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private System.DateTime CreationDateField;

        private Project2ObjectWCF.DTO.FileDTO FileField;

        private int IdField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate
        {
            get
            {
                return this.CreationDateField;
            }
            set
            {
                this.CreationDateField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project2ObjectWCF.DTO.FileDTO File
        {
            get
            {
                return this.FileField;
            }
            set
            {
                this.FileField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name = "TagDTO", Namespace = "http://schemas.datacontract.org/2004/07/Project2ObjectWCF.DTO", IsReference = true)]
    public partial class TagDTO : object, System.Runtime.Serialization.IExtensibleDataObject
    {

        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;

        private Project2ObjectWCF.DTO.FileDTO FileField;

        private int FileIdField;

        private int IdField;

        private string KeyField;

        private string ValueField;

        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public Project2ObjectWCF.DTO.FileDTO File
        {
            get
            {
                return this.FileField;
            }
            set
            {
                this.FileField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileId
        {
            get
            {
                return this.FileIdField;
            }
            set
            {
                this.FileIdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key
        {
            get
            {
                return this.KeyField;
            }
            set
            {
                this.KeyField = value;
            }
        }

        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName = "IFileMetadataTag")]
public interface IFileMetadataTag
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/FileInterface/AddFile", ReplyAction = "http://tempuri.org/FileInterface/AddFileResponse")]
    void AddFile(Project2ObjectWCF.DTO.FileDTO file);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/FileInterface/AddFile", ReplyAction = "http://tempuri.org/FileInterface/AddFileResponse")]
    System.Threading.Tasks.Task AddFileAsync(Project2ObjectWCF.DTO.FileDTO file);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/FileInterface/DeleteFile", ReplyAction = "http://tempuri.org/FileInterface/DeleteFileResponse")]
    void DeleteFile(string filePath);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/FileInterface/DeleteFile", ReplyAction = "http://tempuri.org/FileInterface/DeleteFileResponse")]
    System.Threading.Tasks.Task DeleteFileAsync(string filePath);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/FileInterface/GetFilesAndMetadata", ReplyAction = "http://tempuri.org/FileInterface/GetFilesAndMetadataResponse")]
    Project2ObjectWCF.DTO.FileDTO[] GetFilesAndMetadata();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/FileInterface/GetFilesAndMetadata", ReplyAction = "http://tempuri.org/FileInterface/GetFilesAndMetadataResponse")]
    System.Threading.Tasks.Task<Project2ObjectWCF.DTO.FileDTO[]> GetFilesAndMetadataAsync();

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/FileInterface/FindFilesByFileName", ReplyAction = "http://tempuri.org/FileInterface/FindFilesByFileNameResponse")]
    Project2ObjectWCF.DTO.FileDTO[] FindFilesByFileName(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/FileInterface/FindFilesByFileName", ReplyAction = "http://tempuri.org/FileInterface/FindFilesByFileNameResponse")]
    System.Threading.Tasks.Task<Project2ObjectWCF.DTO.FileDTO[]> FindFilesByFileNameAsync(string name);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMetadataInterface/ChangeMetadataForFile", ReplyAction = "http://tempuri.org/IMetadataInterface/ChangeMetadataForFileResponse")]
    void ChangeMetadataForFile(string path, Project2ObjectWCF.DTO.MetadataDTO metadata);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/IMetadataInterface/ChangeMetadataForFile", ReplyAction = "http://tempuri.org/IMetadataInterface/ChangeMetadataForFileResponse")]
    System.Threading.Tasks.Task ChangeMetadataForFileAsync(string path, Project2ObjectWCF.DTO.MetadataDTO metadata);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/TagInterface/AddTag", ReplyAction = "http://tempuri.org/TagInterface/AddTagResponse")]
    void AddTag(Project2ObjectWCF.DTO.TagDTO tag);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/TagInterface/AddTag", ReplyAction = "http://tempuri.org/TagInterface/AddTagResponse")]
    System.Threading.Tasks.Task AddTagAsync(Project2ObjectWCF.DTO.TagDTO tag);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/TagInterface/DeleteCustomTag", ReplyAction = "http://tempuri.org/TagInterface/DeleteCustomTagResponse")]
    void DeleteCustomTag(string tag);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/TagInterface/DeleteCustomTag", ReplyAction = "http://tempuri.org/TagInterface/DeleteCustomTagResponse")]
    System.Threading.Tasks.Task DeleteCustomTagAsync(string tag);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/TagInterface/GetFilesByTagKey", ReplyAction = "http://tempuri.org/TagInterface/GetFilesByTagKeyResponse")]
    Project2ObjectWCF.DTO.FileDTO[] GetFilesByTagKey(string key);

    [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/TagInterface/GetFilesByTagKey", ReplyAction = "http://tempuri.org/TagInterface/GetFilesByTagKeyResponse")]
    System.Threading.Tasks.Task<Project2ObjectWCF.DTO.FileDTO[]> GetFilesByTagKeyAsync(string key);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IFileMetadataTagChannel : IFileMetadataTag, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class FileMetadataTagClient : System.ServiceModel.ClientBase<IFileMetadataTag>, IFileMetadataTag
{

    public FileMetadataTagClient()
    {
    }

    public FileMetadataTagClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public FileMetadataTagClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public FileMetadataTagClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public FileMetadataTagClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public void AddFile(Project2ObjectWCF.DTO.FileDTO file)
    {
        base.Channel.AddFile(file);
    }

    public System.Threading.Tasks.Task AddFileAsync(Project2ObjectWCF.DTO.FileDTO file)
    {
        return base.Channel.AddFileAsync(file);
    }

    public void DeleteFile(string filePath)
    {
        base.Channel.DeleteFile(filePath);
    }

    public System.Threading.Tasks.Task DeleteFileAsync(string filePath)
    {
        return base.Channel.DeleteFileAsync(filePath);
    }

    public Project2ObjectWCF.DTO.FileDTO[] GetFilesAndMetadata()
    {
        return base.Channel.GetFilesAndMetadata();
    }

    public System.Threading.Tasks.Task<Project2ObjectWCF.DTO.FileDTO[]> GetFilesAndMetadataAsync()
    {
        return base.Channel.GetFilesAndMetadataAsync();
    }

    public Project2ObjectWCF.DTO.FileDTO[] FindFilesByFileName(string name)
    {
        return base.Channel.FindFilesByFileName(name);
    }

    public System.Threading.Tasks.Task<Project2ObjectWCF.DTO.FileDTO[]> FindFilesByFileNameAsync(string name)
    {
        return base.Channel.FindFilesByFileNameAsync(name);
    }

    public void ChangeMetadataForFile(string path, Project2ObjectWCF.DTO.MetadataDTO metadata)
    {
        base.Channel.ChangeMetadataForFile(path, metadata);
    }

    public System.Threading.Tasks.Task ChangeMetadataForFileAsync(string path, Project2ObjectWCF.DTO.MetadataDTO metadata)
    {
        return base.Channel.ChangeMetadataForFileAsync(path, metadata);
    }

    public void AddTag(Project2ObjectWCF.DTO.TagDTO tag)
    {
        base.Channel.AddTag(tag);
    }

    public System.Threading.Tasks.Task AddTagAsync(Project2ObjectWCF.DTO.TagDTO tag)
    {
        return base.Channel.AddTagAsync(tag);
    }

    public void DeleteCustomTag(string tag)
    {
        base.Channel.DeleteCustomTag(tag);
    }

    public System.Threading.Tasks.Task DeleteCustomTagAsync(string tag)
    {
        return base.Channel.DeleteCustomTagAsync(tag);
    }

    public Project2ObjectWCF.DTO.FileDTO[] GetFilesByTagKey(string key)
    {
        return base.Channel.GetFilesByTagKey(key);
    }

    public System.Threading.Tasks.Task<Project2ObjectWCF.DTO.FileDTO[]> GetFilesByTagKeyAsync(string key)
    {
        return base.Channel.GetFilesByTagKeyAsync(key);
    }
}
